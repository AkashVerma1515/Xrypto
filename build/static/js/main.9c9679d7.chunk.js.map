{"version":3,"sources":["coin.js","App.js","reportWebVitals.js","index.js"],"names":["coin","name","price","symbol","marketcap","volume","image","priceChange","className","src","alt","toLocaleString","toFixed","App","useState","setCoin","search","setSearch","useEffect","axios","get","then","res","data","catch","err","console","log","filteredCoins","filter","toLowerCase","includes","id","type","placeholder","onChange","e","target","value","map","total_volume","current_price","market_cap","price_change_percentage_24h","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAiCeA,EA9BF,SAAC,GAAoE,IAAlEC,EAAiE,EAAjEA,KAAMC,EAA2D,EAA3DA,MAAOC,EAAoD,EAApDA,OAAQC,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,OAAQC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAE7D,OACE,qBAAKC,UAAU,iBAAf,SACE,sBAAKA,UAAU,WAAf,UACE,sBAAKA,UAAU,OAAf,UACE,qBAAKC,IAAKH,EAAOI,IAAI,WACrB,6BAAKT,IACL,mBAAGO,UAAU,cAAb,SAA4BL,OAE9B,sBAAKK,UAAU,YAAf,UACE,oBAAGA,UAAU,aAAb,cAA4BN,KAC5B,oBAAGM,UAAU,cAAb,cAA6BH,EAAOM,oBAEnCJ,EAAc,EACb,oBAAGC,UAAU,mBAAb,UAAiCD,EAAYK,QAAQ,GAArD,OAEA,oBAAGJ,UAAU,qBAAb,UAAmCD,EAAYK,QAAQ,GAAvD,OAGF,oBAAGJ,UAAU,iBAAb,cACIJ,EAAUO,6B,MC8BTE,MAhDf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNd,EADM,KACAe,EADA,OAEeD,mBAAS,IAFxB,mBAENE,EAFM,KAEEC,EAFF,KAIbC,qBAAU,WACRC,IAAMC,IAAI,4HACPC,MAAK,SAAAC,GACJP,EAAQO,EAAIC,SAEXC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC7B,IAEH,IAAMG,EAAgB5B,EAAK6B,QAAO,SAAA7B,GAAI,OAAIA,EAAKC,KAAK6B,cAAcC,SAASf,EAAOc,kBAElF,OACE,sBAAKtB,UAAU,WAAWwB,GAAG,cAA7B,UACE,sBAAKxB,UAAU,cAAf,UACE,oBAAIA,UAAU,YAAd,+BACA,+BACE,uBAAOyB,KAAK,OACVC,YAAY,SACZ1B,UAAU,aAAa2B,SAAU,SAAAC,GAAC,OAAInB,EAAUmB,EAAEC,OAAOC,eAG/D,qBAAK9B,UAAU,KAAf,kBACA,qBAAKA,UAAU,SAAf,oBACA,qBAAKA,UAAU,QAAf,mBACA,qBAAKA,UAAU,SAAf,oBACA,qBAAKA,UAAU,cAAf,sBACA,qBAAKA,UAAU,SAAf,qBAECoB,EAAcW,KAAI,SAAAvC,GACjB,OAAQ,cAAC,EAAD,CAENC,KAAMD,EAAKC,KACXK,MAAON,EAAKM,MACZH,OAAQH,EAAKG,OACbE,OAAQL,EAAKwC,aACbtC,MAAOF,EAAKyC,cACZrC,UAAWJ,EAAK0C,WAChBnC,YAAaP,EAAK2C,6BAPb3C,EAAKgC,WC3BLY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.9c9679d7.chunk.js","sourcesContent":["import React from 'react';\r\nimport './coin.css';\r\n\r\nconst coin = ({ name, price, symbol, marketcap, volume, image, priceChange }) => {\r\n\r\n  return (\r\n    <div className='coin-container'>\r\n      <div className='coin-row'>\r\n        <div className='coin'>\r\n          <img src={image} alt='crypto' />\r\n          <h1>{name}</h1>\r\n          <p className='coin-symbol'>{symbol}</p>\r\n        </div>\r\n        <div className='coin-data'>\r\n          <p className='coin-price'>${price}</p>\r\n          <p className='coin-volume'>${volume.toLocaleString()}</p>\r\n\r\n          {priceChange < 0 ? (\r\n            <p className='coin-percent red'>{priceChange.toFixed(2)}%</p>\r\n          ) : (\r\n            <p className='coin-percent green'>{priceChange.toFixed(2)}%</p>\r\n          )}\r\n\r\n          <p className='coin-marketcap'>\r\n            ${marketcap.toLocaleString()}\r\n          </p>\r\n          {/* <button onClick={Chart}>Click me</button> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default coin;","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Coin from './coin'\nimport './App.css'\n//https://api.coingecko.com/api/v3/coins/markets?vs_currency=inr&order=market_cap_desc&per_page=100&page=1&sparkline=false\n\nfunction App() {\n  const [coin, setCoin] = useState([]);\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false')\n      .then(res => {\n        setCoin(res.data);\n        //console.log(coin);\n      }).catch(err => console.log(err))\n  }, []);\n\n  const filteredCoins = coin.filter(coin => coin.name.toLowerCase().includes(search.toLowerCase()));\n\n  return (\n    <div className=\"coin-app\" id=\"div_refresh\">\n      <div className=\"coin-search\">\n        <h1 className=\"coin-text\">Search a Currency</h1>\n        <form>\n          <input type='text'\n            placeholder='Search'\n            className='coin-input' onChange={e => setSearch(e.target.value)} />\n        </form>\n      </div>\n      <div className=\"id\">NAME</div>\n      <div className=\"symbol\">SYMBOL</div>\n      <div className=\"price\">PRICE</div>\n      <div className=\"volume\">VOLUME</div>\n      <div className=\"pricechange\">% CHANGE</div>\n      <div className=\"mktcap\">MKT CAP</div>\n\n      {filteredCoins.map(coin => {\n        return (<Coin\n          key={coin.id}\n          name={coin.name}\n          image={coin.image}\n          symbol={coin.symbol}\n          volume={coin.total_volume}\n          price={coin.current_price}\n          marketcap={coin.market_cap}\n          priceChange={coin.price_change_percentage_24h}\n        />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}